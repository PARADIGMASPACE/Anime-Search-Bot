version: '3.8'

services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5444:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init_favorites.sql:/docker-entrypoint-initdb.d/init_favorites.sql
    networks:
      - backend

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - redisdata:/data
    networks:
      - backend

  bot:
    build: .
    command: python main.py
    environment:
      - TOKEN=${TOKEN}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=root
      - DB_PASSWORD=root
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
      - libretranslate
    networks:
      - backend

  libretranslate:
    image: libretranslate/libretranslate
    container_name: libretranslate
    ports:
      - "5000:5000"
    restart: unless-stopped
    environment:
      - LT_LOAD_ONLY=en,ru
      - LT_DEBUG=true
      - LT_LOG_LEVEL=INFO
      - LT_DISABLE_WEB_UI=false

    volumes:
      - ./logs/libretranslate:/var/log/libretranslate
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  pgdata:
  redisdata:

networks:
  backend: