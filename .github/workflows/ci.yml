name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: anime_bot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create test database tables
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/anime_bot_test
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -d anime_bot_test -c "
        CREATE TABLE IF NOT EXISTS users (
            id SERIAL PRIMARY KEY,
            telegram_user_id BIGINT UNIQUE NOT NULL,
            user_language VARCHAR(5) DEFAULT 'ru'
        );

        CREATE TABLE IF NOT EXISTS anime (
            id SERIAL PRIMARY KEY,
            title_original TEXT NOT NULL,
            title_ru TEXT,
            id_anilist INTEGER,
            id_shikimori INTEGER,
            total_episodes_relase INTEGER DEFAULT 0
        );

        CREATE TABLE IF NOT EXISTS favorites (
            id SERIAL PRIMARY KEY,
            user_id BIGINT NOT NULL,
            anime_id INTEGER NOT NULL,
            UNIQUE(user_id, anime_id)
        );
        "

    - name: Run tests with pytest
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/anime_bot_test
        REDIS_URL: redis://localhost:6379
        BOT_TOKEN: test_token
      run: |
        pytest tests/ -v --tb=short

    - name: Generate coverage report
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/anime_bot_test
        REDIS_URL: redis://localhost:6379
        BOT_TOKEN: test_token
      run: |
        pytest tests/ --cov=database --cov=services --cov=utils --cov-report=xml

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install ruff black isort

    - name: Run ruff
      run: ruff check .

    - name: Check code formatting with black
      run: black --check .

    - name: Check import sorting with isort
      run: isort --check-only .
